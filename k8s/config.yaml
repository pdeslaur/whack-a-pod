---

apiVersion: v1
kind: Namespace
metadata:
  name: whack-a-pod
---

apiVersion: v1
kind: ServiceAccount
metadata:
  name: wap-admin-serviceaccount
  namespace: whack-a-pod
---

apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: wap-admin-cluster-admin-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
  - kind: ServiceAccount
    name: wap-admin-serviceaccount
    namespace: whack-a-pod
---

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: admin-deployment
  labels:
    app: admin
  namespace: whack-a-pod
spec:
  replicas: 3
  selector:
    matchLabels:
      app: admin
  template:
    metadata:
      labels:
        app: admin
    spec:
      serviceAccountName: wap-admin-serviceaccount
      containers:
      - name: admin
        image: gcr.io/dockyard-ui-demo/whackapod-admin:0.0.1
        imagePullPolicy: IfNotPresent
        env:
        - name: APIIMAGE
          value: gcr.io/dockyard-ui-demo/whackapod-api:0.0.1
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 30
          timeoutSeconds: 5
        ports:
        - containerPort: 8080
---

kind: Service
apiVersion: v1
metadata:
  name: admin
  namespace: whack-a-pod
spec:
  type: NodePort
  selector:
    app: admin
  ports:
  - protocol: TCP
    port: 8080
    targetPort: 8080
---

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: game-deployment
  labels:
    app: game
  namespace: whack-a-pod
spec:
  replicas: 1
  selector:
    matchLabels:
      app: game
  template:
    metadata:
      labels:
        app: game
    spec:
      containers:
      - name: game
        image: gcr.io/dockyard-ui-demo/whackapod-game:0.0.1
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 30
          timeoutSeconds: 5
        ports:
        - containerPort: 8080
---

kind: Service
apiVersion: v1
metadata:
  name: game
  namespace: whack-a-pod
spec:
  type: NodePort
  selector:
    app: game
  ports:
  - protocol: TCP
    port: 8080
    targetPort: 8080

---

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: api-deployment
  labels:
    app: api
  namespace: whack-a-pod
spec:
  replicas: 25
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 2
      maxUnavailable: 5
  selector:
    matchLabels:
      app: api
  template:
    metadata:
      labels:
        app: api
    spec:
      containers:
      - name: api
        image: gcr.io/dockyard-ui-demo/whackapod-api:0.0.1
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 30
          timeoutSeconds: 5
        ports:
        - containerPort: 8080
---

kind: Service
apiVersion: v1
metadata:
  name: api
  namespace: whack-a-pod
spec:
  type: NodePort
  selector:
    app: api
  ports:
  - protocol: TCP
    port: 8080
    targetPort: 8080
---

apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: wap-ingress
  namespace: whack-a-pod
spec:
  rules:
  - http:
      paths:
      - path: /api/*
        backend:
          serviceName: api
          servicePort: 8080
      - path: /admin/*
        backend:
          serviceName: admin
          servicePort: 8080
      - path: /*
        backend:
          serviceName: game
          servicePort: 8080
